name: Build Python packages

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target_os: linux
            arch: amd64
            plat_name: manylinux_2_17_x86_64
          - name: linux-arm64
            runner: ubuntu-22.04-arm64
            target_os: linux
            arch: arm64
            plat_name: manylinux_2_17_aarch64
          - name: macos-amd64
            runner: macos-13
            target_os: macos
            arch: amd64
            plat_name: macosx_10_9_x86_64
          - name: macos-arm64
            runner: macos-14
            target_os: macos
            arch: arm64
            plat_name: macosx_11_0_arm64

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build backend
        run: python -m pip install --upgrade build

      - name: Install nim
        run: |
          wget https://nim-lang.org/download/nim-1.6.20.tar.xz
          tar xf nim-1.6.20.tar.xz
          pushd nim-1.6.20
          sh build.sh
          bin/nim c koch
          ./koch boot -d:release
          export PATH="$(pwd)/bin:${PATH}"
          popd

      - name: Build codetracer binaries
        shell: bash
        run: |
          set -euo pipefail

          TARGET_DIR="build/src/ct/bin/${{ matrix.target_os }}-${{ matrix.arch }}"
          mkdir -p "${TARGET_DIR}"

          nim -d:release \
            --d:asyncBackend=asyncdispatch \
            --dynlibOverride:std -d:staticStd \
            --gc:refc --hints:on --warnings:off \
            --boundChecks:on \
            -d:useOpenssl3 \
            -d:ssl \
            -d:chronicles_sinks=json -d:chronicles_line_numbers=true \
            -d:chronicles_timestamps=UnixTime \
            -d:ctTest -d:testing --hint"[XDeclaredButNotUsed]":off \
            -d:builtWithNix \
            -d:ctEntrypoint \
            -d:pythonPackage \
            -d:linksPathConst=.. \
            -d:libcPath=libc \
            -d:pathToNodeModules=../node_modules \
            --nimcache:nimcache \
            --out:"${TARGET_DIR}/ct" c ./src/ct/codetracer.nim

          nim \
            -d:release -d:asyncBackend=asyncdispatch \
            --gc:refc --hints:off --warnings:off \
            --debugInfo --lineDir:on \
            --boundChecks:on --stacktrace:on --linetrace:on \
            -d:chronicles_sinks=json -d:chronicles_line_numbers=true \
            -d:chronicles_timestamps=UnixTime \
            -d:ssl \
            -d:ctTest -d:testing --hint"[XDeclaredButNotUsed]":off \
            -d:linksPathConst=.. \
            -d:libcPath=libc \
            -d:builtWithNix \
            -d:ctEntrypoint \
            -d:pythonPackage \
            --nimcache:nimcache \
            --out:"${TARGET_DIR}/db-backend-record" c ./src/ct/db_backend_record.nim

      - name: Build wheel
        run: |
          pushd build
          python -m build --wheel -C--build-option=--plat-name=${{ matrix.plat_name }}
